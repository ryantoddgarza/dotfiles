#!/bin/bash

# Manage global packages installed via a package management system

set -e

usage() {
cat << EOF
usage: pkgman [options]

options:
  -h    Show this help message
  -l    List all globally installed packages
  -u    Update all globally installed packages
EOF
}

update_homebrew() {
  echo '› brew update'
  brew update
  echo '› brew upgrade'
  brew upgrade
  echo '› brew cleanup'
  brew cleanup
}

update_npm() {
  echo '› npm update -g'
  npm update -g
}

nvm_excluded_global_binaries() {
  not_these='node npm npx'

  for file in $not_these
  do
    echo "! -name $file"
  done
}

nvm_global_binaries() {
  global_binary_paths="$(find "$NVM_DIR"/versions/*/*/bin/* -type l -wholename '*/bin/*' $(nvm_excluded_global_binaries))"

  if [[ -n "$global_binary_paths" ]]
  then
    echo $global_binary_paths | xargs -n 1 basename | sort | uniq
  fi
}

nvm_install_global_binaries() {
cat << EOF
› npm -g install
$(nvm_global_binaries)
EOF
  npm -g install $(nvm_global_binaries)
}

nvm_install_long_term_support() {
  echo '› nvm install --lts'
  nvm install --lts

  echo '› nvm alias default node'
  nvm alias default node
}

update_nvm() {
  if [ -s "$NVM_DIR/nvm.sh"  ]
  then
    \. "$NVM_DIR/nvm.sh"
    nvm_install_long_term_support
    nvm_install_global_binaries
  else
    echo 'failed to source nvm.sh'
  fi
}

update_all() {
  update_homebrew
  update_nvm
  update_npm
}

list_packages() {
  echo 'Homebrew:'
  brew ls
  echo ''
  echo 'NPM:'
  npm list -g --depth=0
}

optstring=':hlu'

while getopts $optstring opt
do
  case $opt in
    h ) usage ;;
    l ) list_packages ;;
    u ) update_all ;;
    ? )
      echo "unknown option: -$OPTARG"
      usage
      exit 2
      ;;
  esac
done

if ((OPTIND == 1))
then
  usage
  exit 2
fi
