#!/bin/bash

# Manage packages installed globally via package management systems

set -e

usage() {
cat << EOF
usage: pkgman [options]

options:
  -h    Show this help message
  -l    List all globally installed packages
  -u    Update all globally installed packages
EOF
}

update_homebrew() {
  echo '› brew update'
  brew update
  echo '› brew upgrade'
  brew upgrade
  echo '› brew cleanup'
  brew cleanup
}

nvm_latest_lts() {
  nvm list-remote --no-colors | \
    grep 'Latest LTS' | \
    tail -1 | \
    sed 's/.*v/v/g' | \
    awk '{print $1}'
}

nvm_install_long_term_support() {
  echo '› comparing node versions'

  current_v=$(nvm current)
  latest_v=$(nvm_latest_lts)

  if [ $current_v = $latest_v ]
  then
    echo "up to date $current_v"
  else
    echo 'update available'

    echo '› nvm install 'lts/*' --reinstall-packages-from=current'
    nvm install 'lts/*' --reinstall-packages-from=current

    echo '› nvm alias default node'
    nvm alias default node
  fi
}

update_nvm() {
  if [ -s "$NVM_DIR/nvm.sh" ]
  then
    \. "$NVM_DIR/nvm.sh"
    nvm_install_long_term_support
  else
    echo 'failed to source nvm.sh'
  fi
}

update_npm() {
  echo '› npm update -g'
  npm update -g
}

update_all() {
  update_homebrew
  update_nvm
  update_npm
}

list_packages() {
  echo 'Homebrew:'
  brew ls
  echo ''
  echo 'NPM:'
  npm list -g --depth=0
}

optstring=':hlu'

while getopts $optstring opt
do
  case $opt in
    h ) usage ;;
    l ) list_packages ;;
    u ) update_all ;;
    ? )
      echo "unknown option: -$OPTARG"
      usage
      exit 2
      ;;
  esac
done

if ((OPTIND == 1))
then
  usage
  exit 2
fi
